{"version":3,"sources":["store/DCS Public Resume 2020.pdf","store/icons/resume_64.svg","store/icons/email_64.svg","store/icons/linkedin_64.svg","store/icons/github_64.svg","hooks/useWindowDimensions.js","hooks/useScrollTrigger.js","hooks/useBreakpoints.js","components/intro/Intro.js","components/about/About.js","components/portfolio/Portfolio.js","components/contact/Contact.js","components/page-header/PageHeader.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","getWindowsDimensions","window","width","innerWidth","height","innerHeight","useWindowDimensions","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useScrollTrigger","sectionsRef","visibilityObj","setVisibilityObj","visibilityObjRef","useRef","dummyVisibilityObj","Object","keys","forEach","key","current","handleScroll","getBoundingClientRect","top","bottom","calculateCurrentBreakpoints","useBreakpoints","breakpoint","setBreakpoint","Navbar","scrollTo","handleOnClick","e","target","innerHTML","className","onClick","Intro","forwardRef","ref","windowSize","style","minHeight","delay","About","ProjectCard","project","Portfolio","isVisible","preventDefault","open","ContactCard","children","icon","redirectTo","isMain","length","src","alt","Contact","ResumeIcon","ResumePDF","EmailIcon","LinkedInIcon","GithubIcon","PageHeader","sectionStr","setSectionStr","strRef","paddingRef","strIndexRef","setTimeout","populateInterval","setInterval","clearInterval","writingInterval","substring","scramblingInterval","padding","i","Math","floor","random","toString","secondCallback","App","introRef","aboutRef","portfolioRef","contactRef","intro","aboutme","portfolio","contact","section","scrollIntoView","behavior","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6b51037c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/DCS Public Resume 2020.ade0ab0c.pdf\";","module.exports = __webpack_public_path__ + \"static/media/resume_64.c61d2005.svg\";","module.exports = __webpack_public_path__ + \"static/media/email_64.e1ee8060.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin_64.23fa596f.svg\";","module.exports = __webpack_public_path__ + \"static/media/github_64.2fce79b7.svg\";","import { useState, useEffect } from 'react'\r\n\r\nconst getWindowsDimensions = () => {\r\n    const { innerWidth: width, innerHeight: height } = window;\r\n    return { width, height };\r\n}\r\n\r\nconst useWindowDimensions = () => {\r\n    const [windowDimensions, setWindowDimensions] = useState(getWindowsDimensions());\r\n\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setWindowDimensions(getWindowsDimensions());\r\n        }\r\n\r\n        window.addEventListener(\"resize\", handleResize);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"resize\", handleResize);\r\n        }\r\n    }, []);\r\n\r\n    return windowDimensions;\r\n}\r\n\r\nexport default useWindowDimensions;","import { useRef, useState, useEffect } from \"react\";\r\n\r\nconst useScrollTrigger = (sectionsRef) => {\r\n    const [visibilityObj, setVisibilityObj] = useState({});\r\n    const visibilityObjRef = useRef(visibilityObj);\r\n\r\n    useEffect(() => {\r\n        let dummyVisibilityObj = {};\r\n        Object.keys(sectionsRef).forEach(key => {\r\n            dummyVisibilityObj[key] = false;\r\n        })\r\n\r\n        visibilityObjRef.current = { ...dummyVisibilityObj };\r\n        setVisibilityObj({ ...dummyVisibilityObj });\r\n\r\n        const handleScroll = () => {\r\n            Object.keys(sectionsRef).forEach(key => {\r\n                const { height, top, bottom } = sectionsRef[key].current.getBoundingClientRect();\r\n                if (top <= height - (window.innerHeight / 8) && bottom >= window.innerHeight / 8) {\r\n                    if (!visibilityObjRef.current[key]) {\r\n                        visibilityObjRef.current[key] = true;\r\n                        setVisibilityObj({\r\n                            ...visibilityObjRef.current,\r\n                            [key]: true\r\n                        })\r\n                    }\r\n                } else if (visibilityObjRef.current[key]) {\r\n                    visibilityObjRef.current[key] = false;\r\n                    setVisibilityObj({\r\n                        ...visibilityObjRef.current,\r\n                        [key]: false\r\n                    })\r\n                }\r\n            });\r\n        }\r\n\r\n        handleScroll();\r\n\r\n        window.addEventListener(\"scroll\", handleScroll);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", handleScroll);\r\n        }\r\n    }, [sectionsRef]);\r\n\r\n    return visibilityObj;\r\n}\r\n\r\nexport default useScrollTrigger;","import { useState, useEffect } from \"react\";\r\n\r\n/**\r\n * Breakpoints screen width meaning\r\n * 1 = xs (extra small: <600px )\r\n * 2 = sm (small: 600px~959px)\r\n * 3 = md (medium: 960px~1279px)\r\n * 4 = lg (large: 1280px~1919px)\r\n * 5 = xl (extra large: >=1920px)\r\n */\r\n\r\nconst calculateCurrentBreakpoints = () => {\r\n  const width = window.innerWidth;\r\n  if (width < 960) {\r\n    return \"sm\";\r\n  } else if (width >= 960 && width < 1280) {\r\n    return \"md\";\r\n  } else {\r\n    return \"lg\";\r\n  }\r\n};\r\n\r\nconst useBreakpoints = () => {\r\n  const [breakpoint, setBreakpoint] = useState(calculateCurrentBreakpoints());\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setBreakpoint(calculateCurrentBreakpoints());\r\n    };\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n  return breakpoint;\r\n};\r\n\r\nexport default useBreakpoints;\r\n","import React, { forwardRef } from \"react\";\r\nimport \"../../App.css\";\r\nimport \"./Intro.css\";\r\n\r\nimport { PageHeader } from \"../\";\r\nimport { useWindowDimensions } from \"../../hooks\";\r\n\r\nconst Navbar = ({ scrollTo }) => {\r\n  const handleOnClick = (e) => {\r\n    scrollTo(e.target.innerHTML);\r\n  };\r\n\r\n  return (\r\n    <div className=\"navbar-container\">\r\n      <div className=\"navbar\">\r\n        <span\r\n          className=\"navbar-selection selection-1 mr-32\"\r\n          onClick={handleOnClick}\r\n        >\r\n          hello\r\n        </span>\r\n        <span\r\n          className=\"navbar-selection selection-2 mr-32\"\r\n          onClick={handleOnClick}\r\n        >\r\n          about me\r\n        </span>\r\n        <span\r\n          className=\"navbar-selection selection-3 mr-32\"\r\n          onClick={handleOnClick}\r\n        >\r\n          projects\r\n        </span>\r\n        <span className=\"navbar-selection selection-4\" onClick={handleOnClick}>\r\n          contact\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Intro = forwardRef(({ scrollTo, breakpoint }, ref) => {\r\n  const windowSize = useWindowDimensions();\r\n\r\n  return (\r\n    <div\r\n      className=\"section intro-bkg\"\r\n      style={{ minHeight: windowSize.height }}\r\n      ref={ref}\r\n    >\r\n      <Navbar scrollTo={scrollTo} />\r\n      <PageHeader delay={3500}>hello.</PageHeader>\r\n      <div className={`intro-container ${breakpoint}`}>\r\n        <span className=\"intro-container-text-line-1\">\r\n          Hello there! I'm{\" \"}\r\n          <span className=\"underlined\">Dale Christian Seen</span>.\r\n        </span>\r\n        <span className=\"intro-container-text-line-2\">\r\n          I'm an aspiring <span className=\"clr-blue\">front-end developer</span>.\r\n        </span>\r\n        <div className=\"intro-container-borderanim\" />\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Intro;\r\n","import React, { forwardRef } from \"react\";\r\n\r\nimport \"../../App.css\";\r\nimport \"./About.css\";\r\n\r\nimport { PageHeader } from \"../\";\r\nimport { useWindowDimensions } from \"../../hooks\";\r\n\r\nconst About = forwardRef(({ scrollTo, breakpoint }, ref) => {\r\n  const windowSize = useWindowDimensions();\r\n\r\n  return (\r\n    <div\r\n      className=\"section about-bkg\"\r\n      style={{ minHeight: windowSize.height }}\r\n      ref={ref}\r\n    >\r\n      <PageHeader delay={3500}>about me.</PageHeader>\r\n      <div className=\"about-container\">\r\n        <span className=\"mb-32\">\r\n          As a recent grad, I have experience building intuitive and responsive\r\n          UI for a variety of web pages ranging from regular static pages to\r\n          interactive search w/ filter pages using modern frameworks such as\r\n          React and Angular. I also have experience building RESTful APIs using\r\n          Express.js and Spring Boot in order to power their corresponding\r\n          front-end functionalities.\r\n        </span>\r\n        <span>\r\n          I seek to dive deeper into the world of web development and will take\r\n          on new opportunities that will allow me to grow as a software\r\n          engineer.\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default About;\r\n","import React, { forwardRef } from \"react\";\r\n\r\nimport \"../../App.css\";\r\nimport \"./Portfolio.css\";\r\n\r\nimport { PageHeader } from \"../\";\r\nimport { useWindowDimensions } from \"../../hooks\";\r\n\r\n// import { projects } from \"../../store\";\r\n\r\nconst ProjectCard = ({ project, breakpoint }) => {\r\n  return (\r\n    <div className={`project-card ${breakpoint}`}>\r\n      <span className=\"h5\">{project}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Portfolio = forwardRef(({ isVisible, breakpoint }, ref) => {\r\n  const windowSize = useWindowDimensions();\r\n\r\n  const handleOnGithubClick = (e) => {\r\n    e.preventDefault();\r\n    window.open(\"https://github.com/dalecs\");\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"section projects-bkg\"\r\n      style={{ minHeight: windowSize.height }}\r\n      ref={ref}\r\n    >\r\n      <PageHeader>projects.</PageHeader>\r\n      <div className={`projects-container ${breakpoint}`}>\r\n        <ProjectCard project=\"Degreeinsight.io\" breakpoint={breakpoint} />\r\n        <ProjectCard project=\"Abode.city\" breakpoint={breakpoint} />\r\n        <ProjectCard project=\"Spartanstop.com\" breakpoint={breakpoint} />\r\n        <ProjectCard project=\"Spartan Agenda\" breakpoint={breakpoint} />\r\n        <ProjectCard project=\"Byte Drive\" breakpoint={breakpoint} />\r\n        <ProjectCard\r\n          project=\"Text Encryptor/Decryptor\"\r\n          breakpoint={breakpoint}\r\n        />\r\n      </div>\r\n      <span>\r\n        ... more in my{\" \"}\r\n        <span className=\"github-link\" onClick={handleOnGithubClick}>\r\n          Github\r\n        </span>\r\n      </span>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Portfolio;\r\n","import React, { forwardRef } from \"react\";\r\n\r\nimport \"../../App.css\";\r\nimport \"./Contact.css\";\r\n\r\nimport { PageHeader } from \"../\";\r\nimport { useWindowDimensions } from \"../../hooks\";\r\n\r\nimport {\r\n  ResumePDF,\r\n  ResumeIcon,\r\n  EmailIcon,\r\n  LinkedInIcon,\r\n  GithubIcon,\r\n} from \"../../store\";\r\n\r\nconst ContactCard = ({ children, icon, redirectTo, isMain, breakpoint }) => {\r\n  const handleOnClick = (e) => {\r\n    e.preventDefault();\r\n    if (redirectTo && redirectTo.length > 0) {\r\n      window.open(redirectTo);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`contact-card ${isMain ? \"main\" : \"\"} ${breakpoint}`}\r\n      onClick={handleOnClick}\r\n    >\r\n      <img src={icon} className=\"mb-8\" alt=\"icon\" />\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Contact = forwardRef(({ isVisible, breakpoint }, ref) => {\r\n  const windowSize = useWindowDimensions();\r\n\r\n  return (\r\n    <div\r\n      className=\"section contact-bkg\"\r\n      style={{ minHeight: windowSize.height }}\r\n      ref={ref}\r\n    >\r\n      <PageHeader>contact.</PageHeader>\r\n      <div className={`contact-container ${breakpoint}`}>\r\n        <ContactCard\r\n          icon={ResumeIcon}\r\n          redirectTo={ResumePDF}\r\n          isMain={true}\r\n          breakpoint={breakpoint}\r\n        >\r\n          <span>My Resume</span>\r\n          <span>(.pdf, ~137KB)</span>\r\n        </ContactCard>\r\n        <div className={`other-contacts-container ${breakpoint}`}>\r\n          <ContactCard\r\n            icon={EmailIcon}\r\n            redirectTo=\"mailTo:Dale.Seen@gmail.com\"\r\n            isMain={false}\r\n            breakpoint={breakpoint}\r\n          >\r\n            Email\r\n          </ContactCard>\r\n          <ContactCard\r\n            icon={LinkedInIcon}\r\n            redirectTo=\"https://www.linkedin.com/in/dalecs\"\r\n            isMain={false}\r\n            breakpoint={breakpoint}\r\n          >\r\n            LinkedIn\r\n          </ContactCard>\r\n          <ContactCard\r\n            icon={GithubIcon}\r\n            redirectTo=\"https://github.com/dalecs\"\r\n            isMain={false}\r\n            breakpoint={breakpoint}\r\n          >\r\n            Github\r\n          </ContactCard>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Contact;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\n\r\nimport \"../../App.css\";\r\nimport \"./PageHeader.css\";\r\n\r\nconst PageHeader = ({ children, delay }) => {\r\n  const [sectionStr, setSectionStr] = useState(\"\");\r\n  const strRef = useRef(\"\");\r\n  const paddingRef = useRef(\"\");\r\n  const strIndexRef = useRef(0);\r\n\r\n  useEffect(() => {\r\n    const firstCallback = () => {\r\n      const secondCallback = () => {\r\n        const writingInterval = setInterval(() => {\r\n          strRef.current += children[strIndexRef.current];\r\n          paddingRef.current = paddingRef.current.substring(\r\n            0,\r\n            paddingRef.current.length - 1\r\n          );\r\n          strIndexRef.current = strIndexRef.current + 1;\r\n\r\n          if (paddingRef.current.length <= 0) {\r\n            clearInterval(writingInterval);\r\n          }\r\n\r\n          setSectionStr(`${strRef.current}${paddingRef.current}`);\r\n        }, 100);\r\n\r\n        const scramblingInterval = setInterval(() => {\r\n          if (paddingRef.current.length <= 0) {\r\n            clearInterval(scramblingInterval);\r\n          } else {\r\n            let padding = \"\";\r\n\r\n            for (let i = 0; i < children.length - strIndexRef.current; i++) {\r\n              padding += Math.floor(Math.random() * 10).toString();\r\n            }\r\n            paddingRef.current = padding;\r\n            setSectionStr(`${strRef.current}${paddingRef.current}`);\r\n          }\r\n        }, 50);\r\n      };\r\n\r\n      const populateInterval = setInterval(() => {\r\n        if (paddingRef.current.length >= children.length) {\r\n          clearInterval(populateInterval);\r\n          secondCallback();\r\n        } else {\r\n          paddingRef.current += Math.floor(Math.random() * 2).toString();\r\n          setSectionStr(`${strRef.current}${paddingRef.current}`);\r\n        }\r\n      }, 10);\r\n    };\r\n\r\n    setTimeout(firstCallback, delay);\r\n  }, [children, delay]);\r\n\r\n  return (\r\n    <div className=\"page-header\">\r\n      <div className=\"page-header-text-rotate\">\r\n        <span className=\"page-header-text\">{sectionStr}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageHeader;\r\n","import React, { useRef, Fragment } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport { Intro, About, Portfolio, Contact } from \"./components\";\r\nimport { useScrollTrigger, useBreakpoints } from \"./hooks\";\r\n\r\nconst App = () => {\r\n  const introRef = useRef(null); // Holds the main div element in the Intro component\r\n  const aboutRef = useRef(null); // Holds the main div element in the About component\r\n  const portfolioRef = useRef(null); // Holds the main div element in the Portfolio component\r\n  const contactRef = useRef(null); // Holds the main div element in the Contact component\r\n\r\n  const sectionsRef = useRef({\r\n    intro: introRef,\r\n    aboutme: aboutRef,\r\n    portfolio: portfolioRef,\r\n    contact: contactRef,\r\n  });\r\n  const visibilityObj = useScrollTrigger(sectionsRef.current);\r\n\r\n  const breakpoint = useBreakpoints();\r\n\r\n  const scrollTo = (section) => {\r\n    switch (section) {\r\n      case \"intro\": {\r\n        if (introRef.current) {\r\n          introRef.current.scrollIntoView({\r\n            behavior: \"smooth\",\r\n          });\r\n        }\r\n        break;\r\n      }\r\n      case \"aboutme\":\r\n      case \"about me\": {\r\n        if (aboutRef.current) {\r\n          aboutRef.current.scrollIntoView({\r\n            behavior: \"smooth\",\r\n          });\r\n        }\r\n        break;\r\n      }\r\n      case \"projects\": {\r\n        if (portfolioRef.current) {\r\n          portfolioRef.current.scrollIntoView({\r\n            behavior: \"smooth\",\r\n          });\r\n        }\r\n        break;\r\n      }\r\n      case \"contact\": {\r\n        if (contactRef.current) {\r\n          contactRef.current.scrollIntoView({\r\n            behavior: \"smooth\",\r\n          });\r\n        }\r\n        break;\r\n      }\r\n      default: {\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Intro\r\n        ref={introRef}\r\n        isVisible={visibilityObj[\"aboutme\"]}\r\n        scrollTo={scrollTo}\r\n        breakpoint={breakpoint}\r\n      />\r\n      <About\r\n        ref={aboutRef}\r\n        isVisible={visibilityObj[\"aboutme\"]}\r\n        scrollTo={scrollTo}\r\n        breakpoint={breakpoint}\r\n      />\r\n      <Portfolio\r\n        ref={portfolioRef}\r\n        isVisible={visibilityObj[\"portfolio\"]}\r\n        breakpoint={breakpoint}\r\n      />\r\n      <Contact\r\n        ref={contactRef}\r\n        isVisible={visibilityObj[\"contact\"]}\r\n        breakpoint={breakpoint}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}