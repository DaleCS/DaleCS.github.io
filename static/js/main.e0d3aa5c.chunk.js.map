{"version":3,"sources":["store/DCS Public Resume 2020.pdf","store/icons/resume_64.svg","store/icons/email_64.svg","store/icons/linkedin_64.svg","store/icons/github_64.svg","components/navbar/Navbar.js","hooks/useWindowDimensions.js","hooks/useScrollTrigger.js","hooks/useBreakpoints.js","components/intro/Intro.js","components/about/About.js","components/portfolio/Portfolio.js","components/contact/Contact.js","components/reusable/TextAnimation.js","components/reusable/PageHeader.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","scrollTo","handleHelloOnClick","breakpoint","e","preventDefault","target","innerHTML","className","isVisible","delay","onClick","getWindowsDimensions","window","width","innerWidth","height","innerHeight","useWindowDimensions","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useScrollTrigger","sectionsRef","visibilityObj","setVisibilityObj","visibilityObjRef","useRef","dummyVisibilityObj","Object","keys","forEach","key","current","handleScroll","getBoundingClientRect","top","bottom","calculateCurrentBreakpoints","useBreakpoints","setBreakpoint","Intro","forwardRef","ref","windowSize","style","minHeight","About","ProjectCard","children","Portfolio","open","ContactCard","icon","redirectTo","isMain","length","src","alt","Contact","ResumeIcon","ResumePDF","EmailIcon","LinkedInIcon","GithubIcon","TextAnimation","text","setText","textRef","paddingRef","previouslyLoaded","elRef","setTimeout","initialPaddingInterval","setInterval","paddingText","i","Math","floor","random","clearInterval","writingInterval","substring","scramblingInterval","PageHeader","App","introRef","aboutRef","portfolioRef","contactRef","intro","aboutme","portfolio","contact","section","toLowerCase","scrollIntoView","behavior","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e0d3aa5c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/DCS Public Resume 2020.ade0ab0c.pdf\";","module.exports = __webpack_public_path__ + \"static/media/resume_64.c61d2005.svg\";","module.exports = __webpack_public_path__ + \"static/media/email_64.e1ee8060.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin_64.23fa596f.svg\";","module.exports = __webpack_public_path__ + \"static/media/github_64.2fce79b7.svg\";","import React from \"react\";\r\n\r\nimport \"../../App.css\";\r\nimport \"./Navbar.css\";\r\n\r\nimport { TextAnimation } from \"../\";\r\n\r\nconst Navbar = ({ scrollTo, breakpoint }) => {\r\n  const handleHelloOnClick = (e) => {\r\n    e.preventDefault();\r\n    scrollTo(e.target.innerHTML);\r\n  };\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      <TextAnimation\r\n        isVisible={true}\r\n        className=\"navbar-selection mr-8\"\r\n        delay={3500}\r\n        onClick={handleHelloOnClick}\r\n      >\r\n        DaleCS\r\n      </TextAnimation>\r\n      <TextAnimation\r\n        isVisible={true}\r\n        className=\"navbar-selection mr-8\"\r\n        delay={3600}\r\n        onClick={handleHelloOnClick}\r\n      >\r\n        about me\r\n      </TextAnimation>\r\n      <TextAnimation\r\n        isVisible={true}\r\n        className=\"navbar-selection mr-8\"\r\n        delay={3700}\r\n        onClick={handleHelloOnClick}\r\n      >\r\n        projects\r\n      </TextAnimation>\r\n      <TextAnimation\r\n        isVisible={true}\r\n        className=\"navbar-selection\"\r\n        delay={3800}\r\n        onClick={handleHelloOnClick}\r\n      >\r\n        contact\r\n      </TextAnimation>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { useState, useEffect } from 'react'\r\n\r\nconst getWindowsDimensions = () => {\r\n    const { innerWidth: width, innerHeight: height } = window;\r\n    return { width, height };\r\n}\r\n\r\nconst useWindowDimensions = () => {\r\n    const [windowDimensions, setWindowDimensions] = useState(getWindowsDimensions());\r\n\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setWindowDimensions(getWindowsDimensions());\r\n        }\r\n\r\n        window.addEventListener(\"resize\", handleResize);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"resize\", handleResize);\r\n        }\r\n    }, []);\r\n\r\n    return windowDimensions;\r\n}\r\n\r\nexport default useWindowDimensions;","import { useRef, useState, useEffect } from \"react\";\r\n\r\nconst useScrollTrigger = (sectionsRef) => {\r\n  const [visibilityObj, setVisibilityObj] = useState({});\r\n  const visibilityObjRef = useRef(visibilityObj);\r\n\r\n  useEffect(() => {\r\n    let dummyVisibilityObj = {};\r\n    Object.keys(sectionsRef).forEach((key) => {\r\n      dummyVisibilityObj[key] = false;\r\n    });\r\n\r\n    visibilityObjRef.current = { ...dummyVisibilityObj };\r\n    setVisibilityObj({ ...dummyVisibilityObj });\r\n\r\n    const handleScroll = () => {\r\n      Object.keys(sectionsRef).forEach((key) => {\r\n        const { height, top, bottom } = sectionsRef[\r\n          key\r\n        ].current.getBoundingClientRect();\r\n        if (\r\n          top <= height - window.innerHeight / 8 &&\r\n          bottom >= window.innerHeight / 8\r\n        ) {\r\n          if (!visibilityObjRef.current[key]) {\r\n            visibilityObjRef.current[key] = true;\r\n            setVisibilityObj({\r\n              ...visibilityObjRef.current,\r\n              [key]: true,\r\n            });\r\n          }\r\n        } else if (visibilityObjRef.current[key]) {\r\n          visibilityObjRef.current[key] = false;\r\n          setVisibilityObj({\r\n            ...visibilityObjRef.current,\r\n            [key]: false,\r\n          });\r\n        }\r\n      });\r\n    };\r\n\r\n    handleScroll();\r\n\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  }, [sectionsRef]);\r\n\r\n  return visibilityObj;\r\n};\r\n\r\nexport default useScrollTrigger;\r\n","import { useState, useEffect } from \"react\";\r\n\r\n/**\r\n * sm = < 960px\r\n * md = 960px ~ 1280px\r\n * lg = >= 1280px\r\n */\r\n\r\nconst calculateCurrentBreakpoints = () => {\r\n  const width = window.innerWidth;\r\n  if (width < 600) {\r\n    return \"xs\";\r\n  } else if (width >= 600 && width < 960) {\r\n    return \"sm\";\r\n  } else if (width >= 960 && width < 1280) {\r\n    return \"md\";\r\n  } else if (width >= 1280 && width < 1920) {\r\n    return \"lg\";\r\n  } else {\r\n    return \"xl\";\r\n  }\r\n};\r\n\r\nconst useBreakpoints = () => {\r\n  const [breakpoint, setBreakpoint] = useState(calculateCurrentBreakpoints());\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setBreakpoint(calculateCurrentBreakpoints());\r\n    };\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n  return breakpoint;\r\n};\r\n\r\nexport default useBreakpoints;\r\n","import React, { forwardRef } from \"react\";\r\nimport \"../../App.css\";\r\nimport \"./Intro.css\";\r\n\r\nimport { PageHeader } from \"../\";\r\nimport { useWindowDimensions } from \"../../hooks\";\r\n\r\nconst Intro = forwardRef(({ isVisible, breakpoint }, ref) => {\r\n  const windowSize = useWindowDimensions();\r\n\r\n  return (\r\n    <div\r\n      className=\"section intro-bkg\"\r\n      style={{ minHeight: windowSize.height }}\r\n      ref={ref}\r\n    >\r\n      <PageHeader isVisible={isVisible} delay={3500} breakpoint={breakpoint}>\r\n        hello.\r\n      </PageHeader>\r\n      <div className={`intro-container ${breakpoint}`}>\r\n        <span className=\"intro-container-text-line-1\">\r\n          Hello there! I'm{\" \"}\r\n          <span className=\"underlined\">Dale Christian Seen</span>.\r\n        </span>\r\n        <span className=\"intro-container-text-line-2\">\r\n          I'm an aspiring <span className=\"clr-blue\">front-end developer</span>.\r\n        </span>\r\n        <div className=\"intro-container-borderanim\" />\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Intro;\r\n","import React, { forwardRef } from \"react\";\r\n\r\nimport \"../../App.css\";\r\nimport \"./About.css\";\r\n\r\nimport { PageHeader } from \"../\";\r\nimport { useWindowDimensions } from \"../../hooks\";\r\n\r\nconst About = forwardRef(({ isVisible, breakpoint }, ref) => {\r\n  const windowSize = useWindowDimensions();\r\n\r\n  return (\r\n    <div\r\n      className=\"section about-bkg\"\r\n      style={{ minHeight: windowSize.height }}\r\n      ref={ref}\r\n    >\r\n      <PageHeader isVisible={isVisible} delay={500} breakpoint={breakpoint}>\r\n        about me.\r\n      </PageHeader>\r\n      <div className=\"about-container\">\r\n        <span className=\"mb-32\">\r\n          As a recent grad, I have experience building intuitive and responsive\r\n          UI for a variety of web pages ranging from regular static pages to\r\n          interactive search w/ filter pages using modern frameworks such as\r\n          React and Angular. I also have experience building RESTful APIs using\r\n          Express.js and Spring Boot in order to power their corresponding\r\n          front-end functionalities.\r\n        </span>\r\n        <span>\r\n          I seek to dive deeper into the world of web development and will take\r\n          on new opportunities that will allow me to grow as a software\r\n          engineer.\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default About;\r\n","import React, { forwardRef } from \"react\";\r\n\r\nimport \"../../App.css\";\r\nimport \"./Portfolio.css\";\r\n\r\nimport { PageHeader } from \"../\";\r\nimport { useWindowDimensions } from \"../../hooks\";\r\n\r\nconst ProjectCard = ({ className, children }) => {\r\n  return <div className={className}>{children}</div>;\r\n};\r\n\r\nconst Portfolio = forwardRef(({ isVisible, breakpoint }, ref) => {\r\n  const windowSize = useWindowDimensions();\r\n\r\n  const handleOnClickGithub = (e) => {\r\n    e.preventDefault();\r\n    window.open(\"https://github.com/dalecs\");\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"section projects-bkg\"\r\n      style={{ minHeight: windowSize.height }}\r\n      ref={ref}\r\n    >\r\n      <PageHeader isVisible={isVisible} delay={500} breakpoint={breakpoint}>\r\n        projects.\r\n      </PageHeader>\r\n      <div className={`projects-container ${breakpoint}`}>\r\n        <ProjectCard className={`project-card ${breakpoint}`}>\r\n          Degreeinsight.io\r\n        </ProjectCard>\r\n        <ProjectCard className={`project-card ${breakpoint}`}>\r\n          Abode.city\r\n        </ProjectCard>\r\n        <ProjectCard className={`project-card ${breakpoint}`}>\r\n          Spartanstop.com\r\n        </ProjectCard>\r\n        <ProjectCard className={`project-card ${breakpoint}`}>\r\n          Spartan Agenda\r\n        </ProjectCard>\r\n        <ProjectCard className={`project-card ${breakpoint}`}>\r\n          Byte Drive\r\n        </ProjectCard>\r\n        <ProjectCard className={`project-card ${breakpoint}`}>\r\n          Text Encryptor/Decryptor\r\n        </ProjectCard>\r\n      </div>\r\n      <span className=\"body1\">\r\n        ... more in my{\" \"}\r\n        <span className=\"github-link\" onClick={handleOnClickGithub}>\r\n          Github\r\n        </span>\r\n      </span>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Portfolio;\r\n","import React, { forwardRef } from \"react\";\r\n\r\nimport \"../../App.css\";\r\nimport \"./Contact.css\";\r\n\r\nimport { PageHeader } from \"../\";\r\nimport { useWindowDimensions } from \"../../hooks\";\r\n\r\nimport {\r\n  ResumePDF,\r\n  ResumeIcon,\r\n  EmailIcon,\r\n  LinkedInIcon,\r\n  GithubIcon,\r\n} from \"../../store\";\r\n\r\nconst ContactCard = ({ children, icon, redirectTo, isMain, breakpoint }) => {\r\n  const handleOnClick = (e) => {\r\n    e.preventDefault();\r\n    if (redirectTo && redirectTo.length > 0) {\r\n      window.open(redirectTo);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`contact-card ${isMain ? \"main\" : \"\"} ${breakpoint}`}\r\n      onClick={handleOnClick}\r\n    >\r\n      <img src={icon} className=\"mb-8\" alt=\"icon\" />\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Contact = forwardRef(({ isVisible, breakpoint }, ref) => {\r\n  const windowSize = useWindowDimensions();\r\n\r\n  return (\r\n    <div\r\n      className=\"section contact-bkg\"\r\n      style={{ minHeight: windowSize.height }}\r\n      ref={ref}\r\n    >\r\n      <PageHeader isVisible={isVisible} delay={500} breakpoint={breakpoint}>\r\n        contact.\r\n      </PageHeader>\r\n      <div className={`contact-container ${breakpoint}`}>\r\n        <ContactCard\r\n          icon={ResumeIcon}\r\n          redirectTo={ResumePDF}\r\n          isMain={true}\r\n          breakpoint={breakpoint}\r\n        >\r\n          <span>My Resume</span>\r\n          <span>(.pdf, ~137KB)</span>\r\n        </ContactCard>\r\n        <div className={`other-contacts-container ${breakpoint}`}>\r\n          <ContactCard\r\n            icon={EmailIcon}\r\n            redirectTo=\"mailTo:Dale.Seen@gmail.com\"\r\n            isMain={false}\r\n            breakpoint={breakpoint}\r\n          >\r\n            Email\r\n          </ContactCard>\r\n          <ContactCard\r\n            icon={LinkedInIcon}\r\n            redirectTo=\"https://www.linkedin.com/in/dalecs\"\r\n            isMain={false}\r\n            breakpoint={breakpoint}\r\n          >\r\n            LinkedIn\r\n          </ContactCard>\r\n          <ContactCard\r\n            icon={GithubIcon}\r\n            redirectTo=\"https://github.com/dalecs\"\r\n            isMain={false}\r\n            breakpoint={breakpoint}\r\n          >\r\n            Github\r\n          </ContactCard>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Contact;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\n\r\nimport \"../../App.css\";\r\nimport \"./TextAnimation.css\";\r\n\r\nconst TextAnimation = ({ isVisible, delay, className, onClick, children }) => {\r\n  const [text, setText] = useState(\"\");\r\n  const textRef = useRef(\"\");\r\n  const paddingRef = useRef(\"\");\r\n\r\n  const previouslyLoaded = useRef(false);\r\n\r\n  const elRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const initialCallback = () => {\r\n      const initialPaddingInterval = setInterval(() => {\r\n        if (paddingRef.current.length < children.length) {\r\n          let paddingText = \"\";\r\n          for (let i = 0; i < paddingRef.current.length + 1; i++) {\r\n            paddingText += Math.floor(Math.random() * 2);\r\n          }\r\n          paddingRef.current = paddingText;\r\n          setText(paddingRef.current);\r\n        } else {\r\n          clearInterval(initialPaddingInterval);\r\n          const writingInterval = setInterval(() => {\r\n            if (textRef.current.length < children.length) {\r\n              textRef.current += children[textRef.current.length];\r\n              paddingRef.current = paddingRef.current.substring(\r\n                0,\r\n                paddingRef.current.length - 1\r\n              );\r\n              setText(`${textRef.current}${paddingRef.current}`);\r\n            } else {\r\n              clearInterval(writingInterval);\r\n            }\r\n          }, 50);\r\n          const scramblingInterval = setInterval(() => {\r\n            if (paddingRef.current.length > 0) {\r\n              let paddingText = \"\";\r\n              for (let i = 0; i < paddingRef.current.length; i++) {\r\n                paddingText += Math.floor(Math.random() * 2);\r\n              }\r\n              paddingRef.current = paddingText;\r\n              setText(`${textRef.current}${paddingRef.current}`);\r\n            } else {\r\n              clearInterval(scramblingInterval);\r\n            }\r\n          }, 30);\r\n        }\r\n      }, 10);\r\n    };\r\n\r\n    if (!previouslyLoaded.current) {\r\n      if (isVisible) {\r\n        previouslyLoaded.current = true;\r\n        setTimeout(initialCallback, delay ? delay : 0);\r\n        setText(\"\");\r\n      }\r\n    }\r\n  }, [isVisible, delay, children]);\r\n\r\n  return (\r\n    <div ref={elRef} className=\"container\" onClick={onClick}>\r\n      <span className={className} style={{ width: `${children.length}ch` }}>\r\n        {text}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextAnimation;\r\n","import React from \"react\";\r\n\r\nimport \"../../App.css\";\r\nimport \"./PageHeader.css\";\r\n\r\nimport TextAnimation from \"./TextAnimation\";\r\n\r\nconst PageHeader = ({ isVisible, delay, children, breakpoint }) => {\r\n  return (\r\n    <div className=\"page-header\">\r\n      <div className=\"page-header-text-rotate\">\r\n        <TextAnimation\r\n          isVisible={isVisible}\r\n          delay={delay}\r\n          className={`page-header-text ${breakpoint}`}\r\n        >\r\n          {children}\r\n        </TextAnimation>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageHeader;\r\n","import React, { useRef, Fragment } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport { Navbar, Intro, About, Portfolio, Contact } from \"./components\";\r\nimport { useScrollTrigger, useBreakpoints } from \"./hooks\";\r\n\r\nconst App = () => {\r\n  const introRef = useRef(null); // Holds the main div element in the Intro component\r\n  const aboutRef = useRef(null); // Holds the main div element in the About component\r\n  const portfolioRef = useRef(null); // Holds the main div element in the Portfolio component\r\n  const contactRef = useRef(null); // Holds the main div element in the Contact component\r\n\r\n  const sectionsRef = useRef({\r\n    intro: introRef,\r\n    aboutme: aboutRef,\r\n    portfolio: portfolioRef,\r\n    contact: contactRef,\r\n  });\r\n  const visibilityObj = useScrollTrigger(sectionsRef.current);\r\n\r\n  const breakpoint = useBreakpoints();\r\n\r\n  const scrollTo = (section) => {\r\n    switch (section.toLowerCase()) {\r\n      case \"dalecs\":\r\n      case \"intro\": {\r\n        if (introRef.current) {\r\n          introRef.current.scrollIntoView({\r\n            behavior: \"smooth\",\r\n          });\r\n        }\r\n        break;\r\n      }\r\n      case \"aboutme\":\r\n      case \"about me\": {\r\n        if (aboutRef.current) {\r\n          aboutRef.current.scrollIntoView({\r\n            behavior: \"smooth\",\r\n          });\r\n        }\r\n        break;\r\n      }\r\n      case \"projects\": {\r\n        if (portfolioRef.current) {\r\n          portfolioRef.current.scrollIntoView({\r\n            behavior: \"smooth\",\r\n          });\r\n        }\r\n        break;\r\n      }\r\n      case \"contact\": {\r\n        if (contactRef.current) {\r\n          contactRef.current.scrollIntoView({\r\n            behavior: \"smooth\",\r\n          });\r\n        }\r\n        break;\r\n      }\r\n      default: {\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Navbar scrollTo={scrollTo} breakpoint={breakpoint} />\r\n      <Intro\r\n        ref={introRef}\r\n        isVisible={visibilityObj[\"intro\"]}\r\n        breakpoint={breakpoint}\r\n      />\r\n      <About\r\n        ref={aboutRef}\r\n        isVisible={visibilityObj[\"aboutme\"]}\r\n        breakpoint={breakpoint}\r\n      />\r\n      <Portfolio\r\n        ref={portfolioRef}\r\n        isVisible={visibilityObj[\"portfolio\"]}\r\n        breakpoint={breakpoint}\r\n      />\r\n      <Contact\r\n        ref={contactRef}\r\n        isVisible={visibilityObj[\"contact\"]}\r\n        breakpoint={breakpoint}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}